<li><a href='#' id='goto-functional-simple' class='pill'>Quadratic</a></li>
<li><a href='#' id='goto-functional-sine' class='pill'>Sine</a></li>
<li><a href='#' id='goto-functional-conditions' class='pill'>Conditions</a></li>
<li><a href='#' id='goto-functional-annotate' class='pill'>Annotated</a></li>
<li><a href='#' id='goto-functional-multiple' class='pill'>Multiple Graphs</a></li>
<li><a href='#' id='goto-functional-scatter' class='pill'>Scatter Graphs</a></li>
<li><a href='#' id='goto-functional-tooltips' class='pill'>Tool tip</a></li>
<li><a href='#' id='goto-functional-secants' class='pill'>Secants</a></li>
<li><a href='#' id='goto-functional-static-derivative' class='pill'>Static Derivative</a></li>
<li><a href='#' id='goto-functional-dynamic-derivative' class='pill'>Dynamic Derivative</a></li>
<li><a href='#' id='goto-functional-polar' class='pill'>Polar Equations</a></li>
<li><a href='#' id='goto-functional-vector' class='pill'>Vectors</a></li>
<li><a href='#' id='goto-functional-polylines' class='pill'>Polylines and Plots</a></li>
<li><a href='#' id='goto-functional-zoombox' class='pill'>Zoom box</a></li>
<script> 
$('#goto-functional-simple').on('click', function() {
var simple = 'functionPlot({\n'
+ '    	target: ".result",\n'
+ '    	grid: true,\n'
+ '	    width: 450,\n'
+ '     height: 250,\n'
+ '     yDomain: [-1, 5],\n'
+ '     xDomain: [-4, 4],\n'
+ '		data: JSON.parse(jsonData.getValue())\n'
+ '});';
var data = '[\n'
+ ' { "fn": "x^3" }\n'
+ ']'
	jsonData.setValue(data);
	$('.result svg').html('')
    editor.setValue(simple);
});
$('#goto-functional-sine').on('click', function() {
var sine = 'functionPlot({\n'
+ '    	target: ".result",\n'
+ '    	grid: true,\n'
+ '	    width: 450,\n'
+ '     height: 250,\n'
+ '     yDomain: [-1.5, 1.5],\n'
+ '     xDomain: [-4, 4],\n'
+ '		data: JSON.parse(jsonData.getValue())\n'
+ '});';
var data = '[\n'
+ '	{ "fn": "sin(x)" }\n'
+ ']'
	jsonData.setValue(data);
	$('.result svg').html('')
    editor.setValue(sine);
});
$('#goto-functional-conditions').on('click', function() {
var conditions = 'functionPlot({\n'
+ '	target: ".result",\n'
+ '	grid: true,\n'
+ ' 	width: 450,\n'
+ '    height: 250,\n'
+ '    yDomain: [-2, 5],\n'
+ '    xDomain: [-4, 4],\n'
+ '		data: JSON.parse(jsonData.getValue())\n'
+ '});';
var data = '[\n'
+ ' { "fn": "x^3" }\n'
+ ']'
	jsonData.setValue(data);
	$('.result svg').html('')
    editor.setValue(conditions);
});
$('#goto-functional-annotate').on('click', function() {
var annotate = 'functionPlot({\n'
+ '  target: ".result",\n'
+ '  yDomain: [-3, 3],\n'
+ '	 width: 450,\n'
+ '  height: 250,\n'
+ '	 data: JSON.parse(jsonData.getValue()),\n'
+ '  annotations: [{\n'
+ '    x: -1\n'
+ '  }, {\n'
+ '    x: 1,\n'
+ '    text: "x = 1"\n'
+ '  }, {\n'
+ '    y: 2,\n'
+ '    text: "y = 2"\n'
+ '  }]\n'
+ '})\n';
var data = '[\n'
+ ' { "fn": "x^3" }\n'
+ ']'
	jsonData.setValue(data);
	$('.result svg').html('')
    editor.setValue(annotate);
});
$('#goto-functional-multiple').on('click', function() {
var multiple = 'functionPlot({\n'
+ '  target: ".result",\n'
+ '	 width: 450,\n'
+ '  height: 250,\n'
+ '	 data: JSON.parse(jsonData.getValue()),\n'
+ '})';
var data = '[\n'
+ '    { "fn": "x", "color": "hotpink" },\n'
+ '    { "fn": "-x" },\n'
+ '    { "fn": "x * x" },\n'
+ '    { "fn": "x * x * x" },\n'
+ '    { "fn": "x * x * x * x" }\n'
+ '  ]'
	jsonData.setValue(data);
	$('.result svg').html('')
    editor.setValue(multiple);
});
$('#goto-functional-scatter').on('click', function() {
var scatter = 'functionPlot({\n'
+ '  target: ".result",\n'
+ '	 width: 450,\n'
+ '  height: 250,\n'
+ '	 data: JSON.parse(jsonData.getValue()),\n'
+ '})\n'
var data = '[\n'
+ '    {"fn": "x < 0 ? -sqrt(-x) : sqrt(x)",\n'
+ '    "samples": 100,\n'
+ '    "graphOptions": {\n'
+ '      "type": "scatter"\n'
+ '    }\n'
+ '  }\n'
+ ']'
	jsonData.setValue(data);
	$('.result svg').html('')
    editor.setValue(scatter);
});
$('#goto-functional-tooltips').on('click', function() {
var tooltips = 'functionPlot({\n'
+ '  target: ".result",\n'
+ '	 width: 450,\n'
+ '  height: 250,\n'
+ '  tip: {\n'
+ '    xLine: true,    // dashed line parallel to y = 0\n'
+ '    yLine: true,    // dashed line parallel to x = 0\n'
+ '    renderer: function (x, y, index) {\n'
+ '      // the returning value will be shown in the tip\n'
+ '    }\n'
+ '  },\n'
+ '  yDomain: [-1, 9],\n'
+ '	 data: JSON.parse(jsonData.getValue()),\n'
+ '})\n'
var data = '[\n'
+ '    { "fn": "x^2" }\n'
+ '  ]\n'
	jsonData.setValue(data);
	$('.result svg').html('')
    editor.setValue(tooltips);
});
$('#goto-functional-secants').on('click', function() {
var tooltips = 'functionPlot({\n'
+ '  target: ".result",\n'
+ '	 width: 450,\n'
+ '  height: 250,\n'
+ '  yDomain: [-1, 9],\n'
+ '  xDomain: [-3, 3],\n'
+ '	 data: JSON.parse(jsonData.getValue())\n'
+ '})\n'
var data = '[{\n'
+ '    "fn": "x^2",\n'
+ '    "secants": [\n'
+ '      { "x0": 1, "x1": 3 },\n'
+ '      { "x0": 1, "x1": 2.5 },\n'
+ '      { "x0": 1, "x1": 2 }\n'
+ '    ]\n'
+ '  }]'
	jsonData.setValue(data);
	$('.result svg').html('')
    editor.setValue(tooltips);
});
$('#goto-functional-static-derivative').on('click', function() {
var sDerivative = 'functionPlot({\n'
+ '  target: ".result",\n'
+ '	 width: 450,\n'
+ '  height: 250,\n'
+ '  yDomain: [-1, 9],\n'
+ '	 data: JSON.parse(jsonData.getValue())\n'
+ '})\n'
var data = '[{\n'
+ '    "fn": "x^2",\n'
+ '    "derivative": {\n'
+ '      "fn": "2 * x",\n'
+ '      "x0": 2\n'
+ '    }\n'
+ '  }]'
	jsonData.setValue(data);
	$('.result svg').html('')
    editor.setValue(sDerivative);
});
$('#goto-functional-dynamic-derivative').on('click', function() {
var dDerivative = 'functionPlot({\n'
+ '  target: ".result",\n'
+ '	 width: 450,\n'
+ '  height: 250,\n'
+ '  yDomain: [-1, 9],\n'
+ '	 data: JSON.parse(jsonData.getValue())\n'
+ '})\n'
var data = '[{\n'
+ '    "fn": "x^2",\n'
+ '    "derivative": {\n'
+ '      "fn": "2 * x",\n'
+ '      "updateOnMouseMove": true\n'
+ '    }\n'
+ '  }]'
	jsonData.setValue(data);
	$('.result svg').html('')
    editor.setValue(dDerivative);
});
$('#goto-functional-polar').on('click', function() {
var polar = 'functionPlot({\n'
+ '  target: ".result",\n'
+ '	 width: 450,\n'
+ '  height: 250,\n'
+ '  yDomain: [-1.897959183, 1.897959183],\n'
+ '  xDomain: [-3, 3],\n'
+ '	 data: JSON.parse(jsonData.getValue())\n'
+ '})\n'
var data = '[{\n'
+ '    "r": "r0 * cos(theta - gamma) + sqrt(a^2 - r0^2 * (sin(theta - gamma))^2)",\n'
+ '    "scope": {\n'
+ '      "a": 1,\n'
+ '      "r0": 0,\n'
+ '      "gamma": 0\n'
+ '    },\n'
+ '    "polar": true,\n'
+ '    "graphOptions": {\n'
+ '      "type": "line"\n'
+ '    }\n'
+ '  }]'
	jsonData.setValue(data);
	$('.result svg').html('')
    editor.setValue(polar);
});
$('#goto-functional-vector').on('click', function() {
var vector = 'functionPlot({\n'
+ '  target: ".result",\n'
+ '	 width: 450,\n'
+ '  height: 250,\n'
+ '	 yDomain: [0, 4],\n'
+ '	 xDomain: [0, 3],\n'
+ '	 data: JSON.parse(jsonData.getValue())\n'
+ '})\n'
var data = '[{\n'
+ '    "vector": [1, 2],\n'
+ '    "displacement": [1, 2],\n'
+ '    "graphOptions": {\n'
+ '      "type": "line",\n'
+ '      "sampler": "builtIn"\n'
+ '    }\n'
+ '  }]'
	jsonData.setValue(data);
	$('.result svg').html('')
    editor.setValue(vector);
});
$('#goto-functional-polylines').on('click', function() {
var polyline = 'functionPlot({\n'
+ '  target: ".result",\n'
+ '	 width: 450,\n'
+ '  height: 250,\n'
+ '	 data: JSON.parse(jsonData.getValue())\n'
+ '});\n'
var data = '[{\n'
+ '    "points": [\n'
+ '      [1, 1],\n'
+ '      [2, 1],\n'
+ '      [2, 2],\n'
+ '      [1, 2],\n'
+ '      [1, 1]\n'
+ '    ],\n'
+ '    "graphOptions": {\n'
+ '      "type": "line"\n'
+ '    }\n'
+ '  },{\n'
+ '    "points": [\n'
+ '      [-1, 1],\n'
+ '      [-2, 1],\n'
+ '      [-2, 2],\n'
+ '      [-1, 2],\n'
+ '      [-1, 1]\n'
+ '    ],\n'
+ '    "graphOptions": {\n'
+ '      "type": "scatter"\n'
+ '    }\n'
+ '  }]'
	jsonData.setValue(data);
	$('.result svg').html('')
    editor.setValue(polyline);
});
$('#goto-functional-zoombox').on('click', function() {
var zoomBox = 'functionPlot({\n'
+ '    	target: ".result",\n'
+ '		plugins: [\n'
+ '		    functionPlot.plugins.zoomBox()\n'
+ '		  ],\n'
+ '    	grid: true,\n'
+ '	    width: 450,\n'
+ '     height: 250,\n'
+ '     yDomain: [-1, 5],\n'
+ '     xDomain: [-4, 4],\n'
+ '		data: [{\n'
+ '			fn: \'sin(x)\'\n'
+ '		}],\n'
+ '});';
var data = '[\n'
+ ' { "fn": "x^3" }\n'
+ ']'
	jsonData.setValue(data);
	$('.result svg').html('')
    editor.setValue(zoomBox);
});
</script>

